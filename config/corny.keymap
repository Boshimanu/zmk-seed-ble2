#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht_bck: ht_bck {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_BCK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <140>;
            flavor = "balanced";
            hold-trigger-key-positions = <12>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <50>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AS";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <50>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
        };

        lhmrow: lhmrow {
            compatible = "zmk,behavior-hold-tap";
            label = "LHMROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <165>;
            quick-tap-ms = <30>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <38 39 40 6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 41 42 43 31>;
        };

        rhmrow: rhmrow {
            compatible = "zmk,behavior-hold-tap";
            label = "RHMROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <165>;
            quick-tap-ms = <30>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30 38 39 40 41 42 43>;
        };

        mk_capt: mk_capt {
            compatible = "zmk,behavior-tap-dance";
            label = "MK_CAPT";
            #binding-cells = <0>;
            bindings =
                <&ht LS(LC(LG(N4))) LS(LG(N2))>,
                <&ht LG(LS(N5)) LG(LS(N4))>;

            tapping-term-ms = <165>;
        };

        it_e: it_e {
            compatible = "zmk,behavior-hold-tap";
            label = "IT_E";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <50>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
        };

        dt_ameth: dt_ameth {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_AMETH";
            #binding-cells = <0>;
            bindings = <&kp LA(LS(O))>, <&kp LA(LS(D))>, <&kp LA(LS(J))>;

            tapping-term-ms = <165>;
        };

        cat_nav_sh: cat_nav_sh {
            compatible = "zmk,behavior-tap-dance";
            label = "CAT_NAV_SH";
            #binding-cells = <0>;
            bindings = <&ht LEFT_SHIFT LS(LA(LG(SLASH)))>, <&to 2>;

            tapping-term-ms = <200>;
        };

        cat_sh_hml: cat_sh_hml {
            compatible = "zmk,behavior-tap-dance";
            label = "CAT_SH_HML";
            #binding-cells = <0>;
            tapping-term-ms = <220>;
            bindings = <&ht LEFT_SHIFT LS(LA(LG(SLASH)))>, <&none>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F     &kp P  &kp G                          &kp J    &kp L  &kp U      &kp Y    &kp SEMI  &kp BSLH
&kp BSPC   &kp A  &kp R  &kp S     &kp T  &kp D                          &kp H    &kp N  &kp E      &kp I    &kp O     &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B      &trans  &kp C_MUTE  &kp K    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LGUI  &mo 1  &kp SPACE                      &kp RET  &mo 2  &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                            &kp N6    &kp N7    &kp N8    &kp N9     &kp N0   &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans   &kp F12
&kp LSHFT   &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &bootloader  &none  &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
                                        &kp LGUI      &trans        &kp SPACE                         &kp RET   &trans    &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                      &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans                         &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans     &none  &bootloader  &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE                      &kp RET    &trans     &kp LALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
